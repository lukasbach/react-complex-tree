"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1598],{5115:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7896),i=(n(2784),n(876));const o={sidebar_position:8},a="Multiple Trees",l={unversionedId:"guides/multiple-trees",id:"guides/multiple-trees",title:"Multiple Trees",description:"Multiple tree components can be added to a web app that can interact with one another. Drag and drop is possible",source:"@site/docs/guides/multiple-trees.mdx",sourceDirName:"guides",slug:"/guides/multiple-trees",permalink:"/docs/guides/multiple-trees",draft:!1,editUrl:"https://github.com/lukasbach/react-complex-tree/edit/main/packages/docs/docs/guides/multiple-trees.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Renaming Functionality",permalink:"/docs/guides/renaming"},next:{title:"Keyboard Bindings",permalink:"/docs/guides/keyboard"}},s={},d=[{value:"Example",id:"example",level:2},{value:"Different root items per tree",id:"different-root-items-per-tree",level:2},{value:"More than one environment",id:"more-than-one-environment",level:2}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"multiple-trees"},"Multiple Trees"),(0,i.kt)("p",null,"Multiple tree components can be added to a web app that can interact with one another. Drag and drop is possible\nacross several tree components such that items can be dragged from one tree to another. Although trees maintain\ntheir own state on search and renaming, only one search input or renaming input is active at once across several\ntrees. Furthermore, trees maintain a shared state which makes synchronisation easier."),(0,i.kt)("p",null,"The requirement for multiple trees sharing drag-and-drop capabilities and state is that they are placed within the\nsame tree environment, i.e. either a shared ",(0,i.kt)("inlineCode",{parentName:"p"},"ControlledTreeEnvironment")," or an ",(0,i.kt)("inlineCode",{parentName:"p"},"UncontrolledTreeEnvironment"),"."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<UncontrolledTreeEnvironment\n  canDragAndDrop={true}\n  canDropOnFolder={true}\n  canReorderItems={true}\n  dataProvider={new StaticTreeDataProvider(longTree.items, (item, data) => ({ ...item, data }))}\n  getItemTitle={item => item.data}\n  viewState={{}}\n>\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'baseline',\n      padding: '20px 0',\n    }}\n  >\n    <div\n      style={{\n        width: '28%',\n        backgroundColor: 'white',\n      }}\n    >\n      <Tree treeId=\"tree-1\" rootItem=\"root\" treeLabel=\"Tree 1\" />\n    </div>\n    <div\n      style={{\n        width: '28%',\n        backgroundColor: 'white',\n      }}\n    >\n      <Tree treeId=\"tree-2\" rootItem=\"root\" treeLabel=\"Tree 2\" />\n    </div>\n    <div\n      style={{\n        width: '28%',\n        backgroundColor: 'white',\n      }}\n    >\n      <Tree treeId=\"tree-3\" rootItem=\"root\" treeLabel=\"Tree 3\" />\n    </div>\n  </div>\n</UncontrolledTreeEnvironment>\n")),(0,i.kt)("h2",{id:"different-root-items-per-tree"},"Different root items per tree"),(0,i.kt)("p",null,"It is not possible for several trees within the same environment to keep distinct states.\nHowever, each tree can use a different item as root item, meaning that the trees can\nstill show different contents."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<UncontrolledTreeEnvironment\n  canDragAndDrop={true}\n  canDropOnFolder={true}\n  canReorderItems={true}\n  dataProvider={new StaticTreeDataProvider(longTree.items, (item, data) => ({ ...item, data }))}\n  getItemTitle={item => item.data}\n  viewState={{}}\n>\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'baseline',\n      padding: '20px 0',\n    }}\n  >\n    <div\n      style={{\n        width: '28%',\n        backgroundColor: 'white',\n      }}\n    >\n      <Tree treeId=\"tree-4\" rootItem=\"Fruit\" treeLabel=\"Tree 1\" />\n    </div>\n    <div\n      style={{\n        width: '28%',\n        backgroundColor: 'white',\n      }}\n    >\n      <Tree treeId=\"tree-5\" rootItem=\"Meals\" treeLabel=\"Tree 2\" />\n    </div>\n    <div\n      style={{\n        width: '28%',\n        backgroundColor: 'white',\n      }}\n    >\n      <Tree treeId=\"tree-6\" rootItem=\"Drinks\" treeLabel=\"Tree 3\" />\n    </div>\n  </div>\n</UncontrolledTreeEnvironment>\n")),(0,i.kt)("h2",{id:"more-than-one-environment"},"More than one environment"),(0,i.kt)("p",null,"If you want several tree environments on one page that do not share state and dnd capabilities,\nyou can do that if several restrictions are obliged."),(0,i.kt)("p",null,"Each tree must have a unique tree ID which is even unique to trees in other environments\nwithin the page."),(0,i.kt)("p",null,"Furthermore, an environment may not contain another tree environment. If this may cause problems\nto your anticipated DOM structure, you can leverage React Portals to render the environments\ndisjunct from one another and still be free in the DOM structure you want to achieve."))}p.isMDXComponent=!0},876:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=i,v=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(v,a(a({ref:t},c),{},{components:n})):r.createElement(v,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);